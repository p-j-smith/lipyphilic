[tox]
isolated_build = true
envlist =
    clean,
    check,
    docs,
    codecov,
    radon,
    report,
    py37,
    py38,
    py39,
    py39-cover,
ignore_basepython_conflict = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39, check, docs

[flake8]
ignore = E121,E123,E501,W293,W504,W605

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONUNBUFFERED=yes
deps =
    -r{toxinidir}/requirements-dev.txt
commands =
    pytest --basetemp={envtmpdir} -vv {posargs}

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 {posargs:src tests setup.py docs}

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:radon]
deps = radon
skip_install = true
commands = 
    radon cc -s --total-average --no-assert -nb src/
    radon mi -m -s src/

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:py39-cover]
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    pytest --cov --cov-report=xml:{toxinidir}/coverage.xml --cov-append --cov-config=.coveragerc -vv {posargs}
deps =
    {[testenv]deps}
    pytest-cov
