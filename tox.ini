[tox]
envlist =
    clean,
    check,
    docs,
    codecov,
    py37-cover,
    py38-cover,
    py39-cover,
    py310-cover,
    radon,
    report
ignore_basepython_conflict = true
requires = tox-conda

[gh-actions]
python =
    3.7: py37-cover
    3.8: py38-cover, check, docs, codecov
    3.9: py39-cover
    3.10: py310-cover

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[flake8]
ignore = E121,E123,E501,W293,W504,W605

[testenv]
basepython =
    {bootstrap,clean,check,report,docs,codecov}: {env:TOXPYTHON:python3}
    {py37}: {env:TOXPYTHON:python3.7}
    {py38,clean,check,docs,radon,report}: {env:TOXPYTHON:python3.8}
    {py39,}: {env:TOXPYTHON:python3.9}
    {py310,}: {env:TOXPYTHON:python3.10}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-cov
    coverage
conda_deps =
    mdanalysis
    freud
    numpy
    tidynamics
conda_channels =
    conda-forge
    defaults
conda_env =
    requirements-dev.yml
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv {posargs}    

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    #isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 {posargs:src tests setup.py docs}
    #isort --verbose --check-only --diff --filter-files .

[testenv:radon]
deps = radon
skip_install = true
commands = 
    radon cc -s --total-average --no-assert -nb src/
    radon mi -m -s src/

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    # sphinx-build -b linkcheck docs dist/docs


[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py37-cover]
basepython = {env:TOXPYTHON:python3.7}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv {posargs}    
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py38-cover]
basepython = {env:TOXPYTHON:python3.8}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv {posargs}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py39-cover]
basepython = {env:TOXPYTHON:python3.9}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv {posargs}    
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py310-cover]
basepython = {env:TOXPYTHON:python3.10}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv {posargs}
deps =
    {[testenv]deps}
    pytest-cov
